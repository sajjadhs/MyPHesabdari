@page "/ExpensesList"
@using Microsoft.EntityFrameworkCore
@inject MyPHesabdari.Model.MyDbContext context
@inject IJSRuntime JSRuntime
<h1>لیست هزینه ها</h1>

<div class="row">
    <div class="col-sm-12">
        <div class="form-group col-4">
            از تاریخ<input type="date" @bind="from" class="form-control" />
        </div>
        <div class="form-group col-4">
            تا تاریخ <input type="date" @bind="to" class="form-control" />
        </div>
        <div class="form-group col-4">
            <button @onclick="Show" class="btn btn-dark">نمایش</button>
        </div>
    </div>
</div>
@if (message != "")
{
    <div class="row">
        <div class="col-sm-12">
            <div class="alert alert-info">
                @message
            </div>

        </div>
    </div>
}


@if (Expenses != null && Expenses.Count > 0)
{

    <table class="table table-striped">
        <thead>
            <tr>
                <th>
                    تاریخ
                </th>
                <th>
                    مبلغ
                </th>
                <th>
                    دسته
                </th>
                <th>
                    پرداخت از
                </th>
            </tr>
        </thead>
        @foreach (var item in Expenses)
        {
            <tr>
                <td style="background-color:#a7ff9d">@item.ExpenseDate.ToString("yyyy-MM-dd")</td>
                <td>@item.Amount.ToString("#,#.00#")</td>
                <td>
                    @if (item.Cost != null && item.CostId != null)
                    {
                        @item.Cost.Name
                    }
                </td>
                <td>@item.Payer</td>
            </tr>
            <tr>
                <td>توضیحات</td>
                <td colspan="3">@item.Description</td>
            </tr>
        }
    </table>

}

<hr />


@code {

    protected override async Task OnInitializedAsync()
    {
        Expenses = await context.Expenses.OrderByDescending(q => q.ExpenseDate).ToListAsync();

        message = "مجموع مخارج برابر است با " + Expenses.Sum(q => q.Amount);
        from = to = DateTime.Now;
        await base.OnInitializedAsync();
    }
    private List<MyPHesabdari.Model.Expense> Expenses;


    DateTime from, to;
    string message = "";

    async Task Show()
    {
        Expenses = await context.Expenses.AsQueryable().Where(q => q.ExpenseDate.Date >= from && q.ExpenseDate.Date <= to).OrderByDescending(q => q.ExpenseDate).ToListAsync();
        message = "مجموع مخارج برابر است با " + Expenses.Sum(q => q.Amount);
    }



}
