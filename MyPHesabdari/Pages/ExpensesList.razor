@page "/ExpensesList"
@using Microsoft.EntityFrameworkCore
@inject IMyContext context
@inject IJSRuntime JSRuntime
@inject IStringLocalizer<SharedRes> L
<h1>@L["ExpensesList"]</h1>

<div class="row">
    <div class="col-sm-12">
        <div class="form-group ">
            @L["FromDate"]<input type="date" @bind="from" class="form-control" />
        </div>
        <div class="form-group ">
            @L["ToDate"] <input type="date" @bind="to" class="form-control" />
        </div>
        <div class="form-group ">
            <button @onclick="(async ()=>await ShowBetweenDates())" class="btn btn-dark">@L["Show"]</button>
        </div>
    </div>
</div>
@if (message.Count > 0)
{
    <div class="row">
        <div class="col-sm-12">
            @foreach (var item in message)
            {
                <div class="alert alert-info">
                    @item
                </div>
            }
        </div>
    </div>
}


@if (Expenses != null && Expenses.Count > 0)
{

    <table class="table table-striped">
        <thead>
            <tr>
                <th>
                    @L["Date"]
                </th>
                <th>
                    @L["Amount"]
                </th>
                <th>
                    @L["Category"]
                </th>
                <th>
                    @L["Payer"]
                </th>
            </tr>
        </thead>
        @foreach (var item in Expenses)
        {
            <tr>
                <td style="background-color:#a7ff9d">@item.ExpenseDate.ToString("yyyy-MM-dd")</td>
                <td>
                    @item.Amount.ToString("#,#.00#") @if (item.CurrencyUnit != null)
                    {@item.CurrencyUnit.Name;
                }
                </td>
                <td>
                    @if (item.Cost != null && item.CostId != null)
                    {
                        @item.Cost.Name
                    }
                </td>
                <td>@item.Payer</td>
            </tr>
            <tr>
                <td>@L["Desc"]</td>
                <td colspan="3">@item.Description</td>
            </tr>
        }
    </table>

}

<hr />


@code {
    private List<MyPHesabdari.Model.CurrencyUnit> currencyUnits;
    private List<MyPHesabdari.Model.Expense> Expenses;
    private DateTime from, to;
    private List<string> message = new List<string>();


    protected override async Task OnInitializedAsync()
    {
        currencyUnits = await context.CurrencyUnits.ToListAsync().ConfigureAwait(true);
        Expenses = await context.Expenses.OrderByDescending(q => q.ExpenseDate).ToListAsync().ConfigureAwait(true);
        CalculateTotals();
        from = to = DateTime.Now;
        await base.OnInitializedAsync();
    }





    async Task ShowBetweenDates()
    {
        message.Clear();
        Expenses = await context.Expenses.AsQueryable().Where(q => q.ExpenseDate.Date >= from && q.ExpenseDate.Date <= to).OrderByDescending(q => q.ExpenseDate).ToListAsync();
        CalculateTotals();
    }


    void CalculateTotals()
    {

        foreach (var item in currencyUnits)
        {
            var sum = Expenses.Where(w => w.CurrencyUnitId == item.Id).Sum(q => q.Amount);
            if (sum > 0)
                message.Add(L["TotalIs"] + " " + sum + " " + item.Name);
        }

    }

}
